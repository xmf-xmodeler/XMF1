parserImport XOCL;
parserImport Parser::BNF;

import Tools;
import Menus;
import DiagramTools;
import DiagramEvents;
import Types;
import DisplayTypes;
import DisplayType;

context DisplayTypes

  @Class Ref extends DisplayType
  
    @Grammar extends OCL::OCL.grammar
    
      Ref ::= name = Name {
      
        [| Tools::DiagramTools::Types::DisplayTypes::Ref(<OCL::StrExp(name)>)|]
      }.
      
    end
    
    @Operation bind(env)
      env
    end
    
    @Operation deref(env)
      if env.binds(name.toString())
      then env.lookup(name.toString())
      else self.error("Cannot find type " + name + " types in scope: " + env.dom().toString())
      end
    end
     
  end