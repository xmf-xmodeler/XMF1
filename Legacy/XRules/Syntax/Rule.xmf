parserImport XOCL;
parserImport Parser::BNF;

import XRules;
import OCL;
import Syntax;
import Parser::BNF;

context Syntax

  @Class Rule
  
    @Doc
      An XRule consists of a name, an antecedent, a condition and a body. The
      antecedent is a boolean combination of patterns. A condition is a boolean
      expression. A body is an action. The rule states that if the system ever
      changes so that the antecedent matches a configuration of objects and the
      condition is satisfied then the body is performed. Notice that the body
      is performed for each change to the participating objects so the condition
      should be used to filter out changes that should not fire the rule.
    end
    
    @Grammar extends OCL::OCL.grammar
    
      Rule ::= name = Name { Rule(name,null,null,null) }.
      
    end
    
    @Attribute name       : String end
    @Attribute antecedent : Condition end
    @Attribute condition  : Performable end
    @Attribute body       : Performable end
    
    @Constructor(name,antecedent,condition,body) end
    
    @Operation lift()
      [| XRules::Syntax::Rule(<StrExp(name)>,null,null,null) |]
    end
    
  end