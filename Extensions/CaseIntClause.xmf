parserImport XOCL;

import XOCL;

context XOCL

  @Class CaseIntClause
  
    @Attribute head : Seq(CaseIntValue) end
    @Attribute body : Performable       end
    
    @Constructor(head,body) ! end
    
    @Operation compile(jumpTable,env,frame,isLast,saveSource)
      let instrs = body.compile(env,frame,isLast,saveSource);
          label = Compiler::newLabel() then
          taggedInstrs = Compiler::labelInstrs(instrs,label)
      in @For value in head do
           value.addLabel(label,jumpTable)
         end;
         taggedInstrs
      end
    end
    
    @Operation FV():Set(String)
      body.FV()
    end
    
    @Operation maxLocals():Integer
      body.maxLocals()
    end
    
    @Operation pprint(out,indent)
      @For value in head do
        value.pprint(out,indent);
        if not isLast
        then format(out,",")
        end
      end;
      format(out," do~%~V",Seq{indent+2});
      body.pprint(out,indent+2);
      format(out,"~%~Vend",Seq{indent})
    end
    
    @Operation rangeSize():Integer
      head->iterate(v range = 0 | range.max(v.rangeSize()))
    end
    
  end