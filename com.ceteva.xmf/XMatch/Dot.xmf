parserImport XOCL;

import XMatch;

context XMatch

  @Class Dot extends Pattern
  
    @Doc
      Matches a single character in the input. The character is left
      as a single sequence at the head of the stack.
    end
  
    @Operation match(chars,env,stack,succ,fail)
      if chars->isEmpty
      then fail()
      else succ(chars->tail,env,Seq{Seq{chars->at(0)} | stack},fail)
      end
    end
    
    @Operation vars():Set(String)
      // Returns the set of vars bound in the receiver.
      Set{}
    end
    
  end