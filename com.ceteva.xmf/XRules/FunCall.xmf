parserImport XOCL;

import XRules;
import XOCL;

context ! Root::XRules

  // Class deployed by Tony Clark on Wed May 11 11:11:07 BST 2005

  // Note that the ! above means that the definitions in this
  // file may contain forward references. Any namespace defined
  // using ! must be initialised (either directly or via its 
  // containing name space) when loaded. The initialisation
  // will occur automatically if you build and load the deployed
  // model using the deployed manifest.

  @Class FunCall extends Root::XRules::Action

    @Attribute fun  : Exp    (?) end
    @Attribute args : Seq(Term) (?) end
    
    @Constructor(fun,args) ! end
    
    @Operation buildArgs(rules,vars,env)
      args->collect(arg | recons(arg.build(rules,vars),env))
    end
    
    @Operation perform(rules,vars,indent,env,succ,fail,cut,exception)
      let args = args->collect(arg | arg.eval(vars,env));
          op = fun.perform(self,Seq{}) then
          result = op.invoke(self,args,Seq{})
      in if result = false
         then fail()
         else succ(env,fail)
         end
      end
    end
    
    @Operation vars(vars)
      @For arg in args do
        vars := arg.vars(vars)
      end;
      vars
    end

  end
