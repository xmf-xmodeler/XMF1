parserImport XOCL;
parserImport Parser::BNF;

import XOCL;
import Clients;
import ExtensionPoints;
import BrowserInterface;

context BrowserInterface

  @Class LabelChangeGuard extends OperationRefSyntax
    
    @Grammar extends OperationRefSyntax.grammar
      LabelChangeGuard ::= opRef = Path { LabelChangeGuard(opRef) }.
    end

    @Operation register(class:Class)
      let registry = xmf.registry() then
          id = "com.ceteva.xmf.labels.changeGuard";
          class = class;
          opRef = opRef then
          op = 
            @Operation(element,newName)
              if opRef->size = 1
              then class.getOperation(opRef->head,2).invoke(self,Seq{element,newName}) 
              else opRef.lookup().invoke(self,Seq{element,newName})
              end
            end
      in registry.addContribution(id,
           Contribution(class,Seq{op}))
      end 
    end

  end
